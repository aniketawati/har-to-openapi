declare const STANDARD_HEADERS: readonly [":authority", ":method", ":path", ":scheme", ":status", "a-im", "accept", "accept-additions", "accept-ch", "accept-ch-lifetime", "accept-charset", "accept-datetime", "accept-encoding", "accept-features", "accept-language", "accept-patch", "accept-post", "accept-ranges", "access-control-allow-credentials", "access-control-allow-headers", "access-control-allow-methods", "access-control-allow-origin", "access-control-expose-headers", "access-control-max-age", "access-control-request-headers", "access-control-request-method", "age", "allow", "alpn", "alt-svc", "alternate-protocol", "alternates", "amp-access-control-allow-source-origin", "apply-to-redirect-ref", "authentication-info", "authorization", "c-ext", "c-man", "c-opt", "c-pep", "c-pep-info", "cache-control", "ch", "connection", "content-base", "content-disposition", "content-dpr", "content-encoding", "content-id", "content-language", "content-length", "content-location", "content-md5", "content-range", "content-script-type", "content-security-policy", "content-security-policy-report-only", "content-style-type", "content-type", "content-version", "cross-origin-resource-policy", "dasl", "date", "dav", "default-style", "delta-base", "depth", "derived-from", "destination", "differential-id", "digest", "dnt", "dpr", "encryption", "encryption-key", "etag", "expect", "expect-ct", "expires", "ext", "forwarded", "from", "front-end-https", "getprofile", "host", "http2-settings", "if", "if-match", "if-modified-since", "if-none-match", "if-range", "if-schedule-tag-match", "if-unmodified-since", "im", "keep-alive", "key", "label", "last-event-id", "last-modified", "link", "link-template", "location", "lock-token", "man", "max-forwards", "md", "meter", "mime-version", "negotiate", "nice", "opt", "ordering-type", "origin", "origin-trial", "overwrite", "p3p", "pep", "pep-info", "pics-label", "poe", "poe-links", "position", "pragma", "prefer", "preference-applied", "profileobject", "protocol", "protocol-info", "protocol-query", "protocol-request", "proxy-authenticate", "proxy-authentication-info", "proxy-authorization", "proxy-connection", "proxy-features", "proxy-instruction", "public", "range", "redirect-ref", "referer", "referrer-policy", "report-to", "retry-after", "rw", "safe", "save-data", "schedule-reply", "schedule-tag", "sec-ch-ua", "sec-ch-ua-mobile", "sec-ch-ua-platform", "sec-fetch-dest", "sec-fetch-mode", "sec-fetch-site", "sec-fetch-user", "sec-websocket-accept", "sec-websocket-extensions", "sec-websocket-key", "sec-websocket-protocol", "sec-websocket-version", "security-scheme", "server", "server-timing", "set-cookie", "set-cookie2", "setprofile", "slug", "soapaction", "status-uri", "strict-transport-security", "sunset", "surrogate-capability", "surrogate-control", "tcn", "te", "timeout", "timing-allow-origin", "tk", "trailer", "transfer-encoding", "upgrade", "upgrade-insecure-requests", "uri", "user-agent", "variant-vary", "vary", "via", "want-digest", "warning", "www-authenticate", "x-att-deviceid", "x-csrf-token", "x-forwarded-for", "x-forwarded-host", "x-forwarded-proto", "x-frame-options", "x-frontend", "x-http-method-override", "x-powered-by", "x-request-id", "x-requested-with", "x-uidh", "x-wap-profile", "x-xss-protection"];
type IStandardHeader = typeof STANDARD_HEADERS[number];
export declare const DEFAULT_AUTH_HEADERS: string[];
export declare const shouldFilterHeader: (header: string, headersToKeep: string[] | undefined) => header is IStandardHeader;
export {};
